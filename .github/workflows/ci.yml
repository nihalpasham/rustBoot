name: ci

on:
  push:
    branches: [main, mcusigner]
  pull_request:
    branches: [main, mcusigner]

env:
  CARGO_TERM_COLOR: always

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Check formatting
        run: cargo fmt -- --check

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v1
      - name: device-tree - unit tests
        run: |
          rustup install nightly
          cargo +nightly test --package rustBoot --lib -- --nocapture
      - name: rustBoot image parser - unit tests
        run: |
          cargo +nightly test --package rustBoot --lib --features nrf52840 -- parser::tests --nocapture
          cargo +nightly test --package rustBoot --lib --features stm32f411 -- parser::tests --nocapture
          cargo +nightly test --package rustBoot --lib --features stm32f446 -- parser::tests --nocapture
          cargo +nightly test --package rustBoot --lib --features stm32h723 -- parser::tests --nocapture
          cargo +nightly test --package rustBoot --lib --features stm32f746 -- parser::tests --nocapture
          cargo +nightly test --package rustBoot --lib --features stm32f334 -- parser::tests --nocapture
      - name: mcusigner - unit tests
        run: |
          cargo +nightly test --package rbsigner --bin rbsigner -- mcusigner::tests --nocapture

  builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [thumbv7em-none-eabihf, aarch64-unknown-none-softfloat]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust for target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Install flip-link
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: install
          args: flip-link
      - name: Install cargo-binutils
        run: |
          cargo install cargo-binutils
          rustup component add llvm-tools-preview
      - name: nrf52840
        if: matrix.target == 'thumbv7em-none-eabihf'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask --features nrf52840 -- nrf52840 build rustBoot-only
      - name: stm32f411
        if: matrix.target == 'thumbv7em-none-eabihf'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask --features stm32f411 -- stm32f411 build rustBoot-only
      - name: stm32f446
        if: matrix.target == 'thumbv7em-none-eabihf'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask --features stm32f446 -- stm32f446 build rustBoot-only
      - name: stm32h723
        if: matrix.target == 'thumbv7em-none-eabihf'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask --features stm32h723 -- stm32h723 build rustBoot-only
      - name: stm32f746
        if: matrix.target == 'thumbv7em-none-eabihf'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask --features stm32f746 -- stm32f746 build rustBoot-only
      - name: stm32f334
        if: matrix.target == 'thumbv7em-none-eabihf'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask --features stm32f334 -- stm32f334 build rustBoot-only
      - name: rpi4
        if: matrix.target == 'aarch64-unknown-none-softfloat'
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: run
          args: -p xtask -- rpi4 build rustBoot-only


